# =============================================================================
# Crossplane Providers Monitoring Configuration
# =============================================================================
# This file contains monitoring and observability configurations
# for Crossplane providers following production best practices.
# =============================================================================

---
# ServiceMonitor for Prometheus scraping
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: crossplane-providers
  namespace: crossplane-system
  labels:
    app.kubernetes.io/name: crossplane-providers
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: crossplane
    app.kubernetes.io/managed-by: argocd
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: crossplane
  endpoints:
    - port: metrics
      interval: 30s
      path: /metrics

---
# PodMonitor for detailed provider metrics
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: crossplane-provider-aws
  namespace: crossplane-system
  labels:
    app.kubernetes.io/name: crossplane-provider-aws
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: crossplane
    app.kubernetes.io/managed-by: argocd
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: provider-aws
  podMetricsEndpoints:
    - port: metrics
      interval: 30s
      path: /metrics

---
# PrometheusRule for alerting
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: crossplane-providers-alerts
  namespace: crossplane-system
  labels:
    app.kubernetes.io/name: crossplane-providers
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: crossplane
    app.kubernetes.io/managed-by: argocd
spec:
  groups:
    - name: crossplane.providers
      rules:
        - alert: CrossplaneProviderDown
          expr: up{job="crossplane-providers"} == 0
          for: 5m
          labels:
            severity: critical
            component: crossplane
          annotations:
            summary: "Crossplane provider is down"
            description: "Crossplane provider has been down for more than 5 minutes"
        
        - alert: CrossplaneProviderHighErrorRate
          expr: rate(crossplane_provider_errors_total[5m]) > 0.1
          for: 2m
          labels:
            severity: warning
            component: crossplane
          annotations:
            summary: "High error rate in Crossplane provider"
            description: "Crossplane provider error rate is above 0.1 errors per second"
        
        - alert: CrossplaneProviderHighLatency
          expr: histogram_quantile(0.95, rate(crossplane_provider_request_duration_seconds_bucket[5m])) > 10
          for: 5m
          labels:
            severity: warning
            component: crossplane
          annotations:
            summary: "High latency in Crossplane provider"
            description: "95th percentile latency is above 10 seconds"

---
# NetworkPolicy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: crossplane-providers-netpol
  namespace: crossplane-system
  labels:
    app.kubernetes.io/name: crossplane-providers
    app.kubernetes.io/component: security
    app.kubernetes.io/part-of: crossplane
    app.kubernetes.io/managed-by: argocd
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: crossplane
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: argocd
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 9443
  egress:
    - {}  # Allow all egress for AWS API calls
